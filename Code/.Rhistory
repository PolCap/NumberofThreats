geom_vline(xintercept = 0,
linetype = "dashed", colour="grey50") +
labs(x="Body mass slope", y = "Taxon") +
scale_colour_jco(name="Class")+
geom_text(data=sample_size,aes(y=taxon, x=1, label=paste("n =", n)))+
xlim(-1,1.5)+
theme(legend.position = "none"))
(figure4 <- mu %>%
filter(.variable!="Intercept") %>%
ggplot(aes(y = taxon, x = .value,
colour=taxon)) +
stat_halfeye(point_interval = median_qi,
.width = c(.5, .95),
fill=add.alpha("grey50",alpha = 0.4)) +
facet_wrap(system~.)+
geom_vline(xintercept = 0,
linetype = "dashed", colour="grey50") +
labs(x="Body mass slope", y = "Taxon") +
scale_colour_jco(name="Class")+
geom_text(data=sample_size,aes(y=taxon, x=1, label=paste("n =", n)))+
xlim(-1,1.5)+
coord_cartesian(clip = "off")+
theme(legend.position = "none"))
(figure4 <- mu %>%
filter(.variable!="Intercept") %>%
ggplot(aes(y = taxon, x = .value,
colour=taxon)) +
stat_halfeye(point_interval = median_qi,
.width = c(.5, .95),
fill=add.alpha("grey50",alpha = 0.4)) +
facet_wrap(system~.)+
geom_vline(xintercept = 0,
linetype = "dashed", colour="grey50") +
labs(x="Body mass slope", y = "Taxon") +
scale_colour_jco(name="Class")+
geom_text(data=sample_size,aes(y=taxon, x=1.25, label=paste("n =", n)))+
xlim(-1,1.5)+
coord_cartesian(clip = "off")+
theme(legend.position = "none"))
ggsave(figure4, file="Figure4.pdf",
width = 10, height = 6,
path = ResultPath)
ggsave(figure4, file="Figure4.pdf",
width = 10, height = 6,
path = ResultPath)
sample_size <- lpi %>%
distinct(ID, .keep_all=T) %>%
group_by(System, Class) %>%
summarise(n=n()) %>%
filter(n>1) %>%
rename(taxon=Class,
system=System)
mu <- gather_draws(lat_amp_fre,`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Freshwater",
taxon="Amphibians") %>%
bind_rows(lat_amp_ter %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Terrestrial",
taxon="Amphibians")) %>%
bind_rows(lat_bird_fre %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Freshwater",
taxon="Birds")) %>%
bind_rows(lat_bird_mar %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Marine",
taxon="Birds")) %>%
bind_rows(lat_bird_ter %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Terrestrial",
taxon="Birds")) %>%
bind_rows(lat_car_mar %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Marine",
taxon="Cartilaginous Fish")) %>%
bind_rows(lat_fish_fre %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Freshwater",
taxon="Bony Fish")) %>%
bind_rows(lat_fish_mar %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Marine",
taxon="Bony Fish")) %>%
bind_rows(lat_mam_fre %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Freshwater",
taxon="Mammals")) %>%
bind_rows(lat_mam_mar %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Marine",
taxon="Mammals")) %>%
bind_rows(lat_mam_ter %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Terrestrial",
taxon="Mammals")) %>%
bind_rows(lat_rep_fre %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Freshwater",
taxon="Reptiles")) %>%
bind_rows(lat_rep_mar %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Marine",
taxon="Reptiles")) %>%
bind_rows(lat_rep_ter %>%
gather_draws(`b_.*`,
regex = TRUE) %>%
as_tibble() %>%
mutate(system="Terrestrial",
taxon="Reptiles")) %>%
mutate(.variable = gsub("b_", "", .variable))
(figure5 <- mu %>%
filter(.variable!="Intercept") %>%
ggplot(aes(y = taxon, x = .value,
colour=taxon)) +
stat_halfeye(point_interval = median_qi,
.width = c(.5, .95),
fill=add.alpha("grey50",alpha = 0.4)) +
facet_wrap(system~.)+
geom_vline(xintercept = 0,
linetype = "dashed", colour="grey50") +
labs(x="Absolute latitdue slope", y = "Taxon") +
scale_colour_jco(name="Class")+
geom_text(data=sample_size,aes(y=taxon, x=1.25, label=paste("n =", n)))+
coord_cartesian(clip = "off")+
theme(legend.position = "none"))
(figure5 <- mu %>%
filter(.variable!="Intercept") %>%
ggplot(aes(y = taxon, x = .value,
colour=taxon)) +
stat_halfeye(point_interval = median_qi,
.width = c(.5, .95),
fill=add.alpha("grey50",alpha = 0.4)) +
facet_wrap(system~.)+
geom_vline(xintercept = 0,
linetype = "dashed", colour="grey50") +
labs(x="Absolute latitdue slope", y = "Taxon") +
scale_colour_jco(name="Class")+
geom_text(data=sample_size,aes(y=taxon, x=0.75,
label=paste("n =", n)))+
coord_cartesian(clip = "off")+
theme(legend.position = "none"))
ggsave(figure5, file="Figure5.pdf",
width = 10, height = 6,
path = ResultPath)
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ='Number of threats',
y = "Number of time series"))
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ="Latitdue",
y = "Number of time series"))
(figureS1 <- gs1a+gs1b+
plot_layout(nrow = 2,
heights =c(1,0.5) )+
plot_annotation(tag_levels = "a") &
theme(plot.tag = element_text(face = "bold"),
plot.margin = margin(t = 0, r = 3.5, b = 0, l = 0, unit = "pt")))
## Panel a: Taxonomic groups ---------------------------------------------------
(gs1a <- lpi %>%
distinct(ID, .keep_all=T) %>%
group_by(Class, n.threat) %>%
summarise(n = n()) %>%
ungroup() %>%
arrange(n) %>%
as_tibble() %>%
ggplot(aes(x=n.threat, y=n)) +
geom_segment(aes(xend=n.threat, yend=0)) +
geom_point(size=2, aes(colour=Class)) +
scale_colour_jco(name="Class")+
facet_wrap(Class~.,
scales = "free") +
coord_flip(clip = "off") +
scale_y_continuous(limits = c(0, 1050),
expand = c(0,0))+
theme(legend.position = "none")+
labs(x ='Number of threats',
y = "Number of time series"))
## Panel b: System -------------------------------------------------------------
(gs1b <- lpi %>%
distinct(ID, .keep_all=T) %>%
group_by(System, n.threat) %>%
summarise(n = n()) %>%
ungroup() %>%
arrange(n) %>%
as_tibble() %>%
ggplot(aes(x=n.threat, y=n)) +
geom_segment(aes(xend=n.threat, yend=0)) +
geom_point(size=2, aes(colour=System)) +
scale_colour_manual(values=c("#A1D6E2","#336B87", "#CC954E"))+
facet_wrap(System~.,
scales = "free") +
coord_flip() +
scale_y_continuous(limits=c(0,1400),
expand = c(0,0))+
theme(legend.position = "none")+
labs(x ='Number of threats',
y = "Number of time series"))
## Panel c: Latitude -----------------------------------------------------------
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ="Latitdue",
y = "Number of time series"))
## Combine figure --------------------------------------------------------------
(figureS1 <- gs1a+gs1b+
plot_layout(nrow = 2,
heights =c(1,0.5) )+
plot_annotation(tag_levels = "a") &
theme(plot.tag = element_text(face = "bold"),
plot.margin = margin(t = 0, r = 3.5, b = 0, l = 0, unit = "pt")))
(figureS1 <- gs1a+gs1b+gs1c+
plot_layout(nrow = 1)+
plot_annotation(tag_levels = "a") &
theme(plot.tag = element_text(face = "bold"),
plot.margin = margin(t = 0, r = 3.5, b = 0, l = 0, unit = "pt")))
ggsave(figureS1,
filename = "FigureS1.pdf",
height = 6,
width = 12,
path = ResultPath)
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab(slab_type = "cdf")+
labs(x ="Latitdue",
y = "Number of time series"))
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab(slab_type = "ccdf")+
labs(x ="Latitdue",
y = "Number of time series"))
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ="Latitdue",
y = "Number of time series"))
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ="Latitdue",
y = "Probability density function/n of the number of time series"))
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ="Latitdue",
y = "Probability density function\n of the number of time series"))
(figureS1 <- gs1a+gs1b+gs1c+
plot_layout(nrow = 1)+
plot_annotation(tag_levels = "a") &
theme(plot.tag = element_text(face = "bold"),
plot.margin = margin(t = 0, r = 3.5, b = 0, l = 0, unit = "pt")))
ggsave(figureS1,
filename = "FigureS1.pdf",
height = 6,
width = 16,
path = ResultPath)
(gs1c <- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ="Latitdue",
y = "Probability density function\n of the number of time series"))
(gs1a <- lpi %>%
distinct(ID, .keep_all=T) %>%
group_by(Class, n.threat) %>%
summarise(n = n()) %>%
ungroup() %>%
arrange(n) %>%
as_tibble() %>%
ggplot(aes(x=n.threat, y=n)) +
geom_segment(aes(xend=n.threat, yend=0)) +
geom_point(size=2, aes(colour=Class)) +
scale_colour_jco(name="Class")+
facet_wrap(Class~.,
scales = "free") +
coord_flip(clip = "off") +
scale_y_continuous(limits = c(0, 1050),
expand = c(0,0))+
theme(legend.position = "none")+
labs(x ='Number of threats',
y = "Number of time series"))
(gs1b <- lpi %>%
distinct(ID, .keep_all=T) %>%
group_by(System, n.threat) %>%
summarise(n = n()) %>%
ungroup() %>%
arrange(n) %>%
as_tibble() %>%
ggplot(aes(x=n.threat, y=n)) +
geom_segment(aes(xend=n.threat, yend=0)) +
geom_point(size=2, aes(colour=System)) +
scale_colour_manual(values=c("#A1D6E2","#336B87", "#CC954E"))+
facet_wrap(System~.,
scales = "free") +
coord_flip() +
scale_y_continuous(limits=c(0,1400),
expand = c(0,0))+
theme(legend.position = "none")+
labs(x ='Number of threats',
y = "Number of time series"))
(figureS1 <- gs1a+gs1b+
plot_layout(nrow = 2,
heights =c(1,0.5) )+
plot_annotation(tag_levels = "a") &
theme(plot.tag = element_text(face = "bold"),
plot.margin = margin(t = 0, r = 3.5, b = 0, l = 0, unit = "pt")))
ggsave(figureS1,
filename = "FigureS1.pdf",
height = 10,
width = 8.5,
path = ResultPath)
(figureS2<- lpi %>%
distinct(ID, .keep_all=T) %>%
ggplot(aes(x=Latitude)) +
stat_slab()+
labs(x ="Latitdue",
y = "Probability density function\n of the number of time series"))
ggsave(figureS2,
filename = "FigureS2.pdf",
height = 6,
width = 6,
path = ResultPath)
rm(list=ls(all=TRUE)) #remove everything
options(mc.cores = parallel::detectCores())
library(tidyverse)
library(brms)
library(rstan)
library(data.table)
library(dplyr)
library(tidybayes)
library(bayesplot)
path <- gsub("Code", "", dirname(rstudioapi::getActiveDocumentContext()$path))
CodePath <- paste0(path,"Code")
DataPath <-  paste0(path,"Data")
ResultPath <-  paste0(path, "Results")
load(paste0(ResultPath, "/Models.RData"))
rhats <- rhat(sys_1)
mcmc_rhat(rhats)
rhats <- rhat(clas_1)
mcmc_rhat(rhats, size = 2)
rhats <- rhat(tl_1)
mcmc_rhat(rhats, size = 2)
rhats <- rhat(bm_1)
mcmc_rhat(rhats, size = 2)
rhats <- rhat(lat_1)
mcmc_rhat(rhats, size = 2)
rhats <- rhat(hab_1)
mcmc_rhat(rhats, size = 2)
ratios <- neff_ratio(sys_1)
mcmc_neff(ratios)
ratios <- neff_ratio(clas_1)
mcmc_neff(ratios)
ratios <- neff_ratio(tl_1)
mcmc_neff(ratios)
ratios <- neff_ratio(hab_1)
mcmc_neff(ratios)
ratios <- neff_ratio(bm_1)
mcmc_neff(ratios)
ratios <- neff_ratio(lat_1)
mcmc_neff(ratios)
pp_check(sys_1, nsamples = 100)
pp_check(sys_1, type = "stat_grouped", stat = "mean", group = "System")
# --------------------------------------------------------------------------------------- #
# - FILE NAME:   Models.R
# - DATE:        20/07/2021
# - DESCRIPTION: Fit bayesian models predicting number of stressors.
# - AUTHORS:     Pol Capdevila Lanzaco (pcapdevila.pc@gmail.com)
# --------------------------------------------------------------------------------------- #
rm(list=ls(all=TRUE)) #remove everything
library(tidyverse)
library(brms)
library(data.table)
library(ape)
library(geiger)
library(zoo)
library(dplyr)
library(expss)
# Set working directory
path <- gsub("Code", "", dirname(rstudioapi::getActiveDocumentContext()$path))
CodePath <- paste0(path,"Code")
DataPath <-  paste0(path,"Data")
ResultPath <-  paste0(path, "Results")
# Load data
load(paste0(DataPath, "/LPIData.RData"))
# Create a new variable for species names
lpi <- lpi %>% mutate(animal=SpeciesName)
# Separate the data for Class and system for the models
mam_ter <- lpi %>% filter(Class=="Mammals"&System=="Terrestrial")
mam_mar <- lpi %>% filter(Class=="Mammals"&System=="Marine")
mam_fres <- lpi %>% filter(Class=="Mammals"&System=="Freshwater")
bird_ter <- lpi %>% filter(Class=="Birds"&System=="Terrestrial")
bird_mar <- lpi %>% filter(Class=="Birds"&System=="Marine")
bird_fres <- lpi %>% filter(Class=="Birds"&System=="Freshwater")
amp_ter <- lpi %>% filter(Class=="Amphibians"&System=="Terrestrial")
amp_fres <- lpi %>% filter(Class=="Amphibians"&System=="Freshwater")
rep_ter <- lpi %>% filter(Class=="Reptiles"&System=="Terrestrial")
rep_mar <- lpi %>% filter(Class=="Reptiles"&System=="Marine")
rep_fres <- lpi %>% filter(Class=="Reptiles"&System=="Freshwater")
fish_mar <- lpi %>% filter(Class=="Bony Fish"&System=="Marine")
fish_fres <- lpi %>% filter(Class=="Bony Fish"&System=="Freshwater")
car_mar <- lpi %>% filter(Class=="Cartilaginous Fish"&System=="Marine")
# Set modelling parameters #####################################################
iter <- 10000
thin <- 0.0005*iter
warmup <- 0.1*iter
# Set weakly informed prior
prior <- c(prior(normal(0, 1), class = b),
prior(exponential(1), class = sigma))
# Body mass ####################################################################
bm_1 <- brm(n.threat~scale(log10(bm_g+1))+(1|SpeciesName),
family= sratio("cloglog"),
iter = iter, thin = thin, warmup = warmup,
prior= prior, control = list(adapt_delta = .975, max_treedepth = 20),
data = lpi, cores=20)
prior <- prior(normal(0, 5), class = "b") +
prior(normal(0, 5), class = "Intercept")
bm_1 <- brm(n.threat~scale(log10(bm_g+1))+(1|SpeciesName),
family= sratio("cloglog"),
iter = iter, thin = thin, warmup = warmup,
prior= prior,
control = list(adapt_delta = .975, max_treedepth = 20),
data = lpi, cores=20)
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threats=ordered(n.threats))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threat=ordered(n.threat))
lpi$n.threat
ordered(lpi$n.threat)
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threat=as.ordered(n.threat))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threat=ordered(n.threat))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threats=ordered(n.threat))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threats=factor(n.threat))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threats=ordered(n.threat))
load(paste0(DataPath, "/LPIData.RData"))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threats=ordered(n.threat))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threats=ordered(n.threat))
lpi <- lpi %>% mutate(animal=SpeciesName,
n.threat=ordered(lpi$n.threat))
ordered(lpi$n.threat)
lpi$n.threat <- ordered(lpi$n.threat)
load(paste0(DataPath, "/LPIData.RData"))
lpi <- lpi %>% mutate(animal=SpeciesName)
lpi$n.threat <- ordered(lpi$n.threat)
mam_ter <- lpi %>% filter(Class=="Mammals"&System=="Terrestrial")
mam_mar <- lpi %>% filter(Class=="Mammals"&System=="Marine")
mam_fres <- lpi %>% filter(Class=="Mammals"&System=="Freshwater")
bird_ter <- lpi %>% filter(Class=="Birds"&System=="Terrestrial")
bird_mar <- lpi %>% filter(Class=="Birds"&System=="Marine")
bird_fres <- lpi %>% filter(Class=="Birds"&System=="Freshwater")
amp_ter <- lpi %>% filter(Class=="Amphibians"&System=="Terrestrial")
amp_fres <- lpi %>% filter(Class=="Amphibians"&System=="Freshwater")
rep_ter <- lpi %>% filter(Class=="Reptiles"&System=="Terrestrial")
rep_mar <- lpi %>% filter(Class=="Reptiles"&System=="Marine")
rep_fres <- lpi %>% filter(Class=="Reptiles"&System=="Freshwater")
fish_mar <- lpi %>% filter(Class=="Bony Fish"&System=="Marine")
fish_fres <- lpi %>% filter(Class=="Bony Fish"&System=="Freshwater")
car_mar <- lpi %>% filter(Class=="Cartilaginous Fish"&System=="Marine")
iter <- 10000
thin <- 0.0005*iter
warmup <- 0.1*iter
prior <- prior(normal(0, 5), class = "b") +
prior(normal(0, 5), class = "Intercept")
bm_1 <- brm(n.threat~scale(log10(bm_g+1))+(1|SpeciesName),
family= sratio("cloglog"),
# iter = iter, thin = thin, warmup = warmup,
prior= prior,
control = list(adapt_delta = .975, max_treedepth = 20),
data = lpi, cores=20)
pp_check(bm_1, nsamples = 100)
